- fullscreen mode
- seeking
- redesign and rewrite timer queue and delay queue handling
- automatically determine best OpenGL settings
- store/load viewpoints

- custom cursors
- fps counter
- "spinning" of the scene (cf. SoQt)
- use delegates to avoid subclassing
- document differences between SC21 and SoQt
- rewrite panning code (should be dependant on zoom factor)
- notification for camera change (sent on mouseUp: after drag/pan/zoom)

- more convenience functionality (suggestions by John Richardson
  below)

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= 
From your perspective and the perspective of many VRML plug-ins, the 
most promanant user input strategy is "examine".

From my perspective, I have 3 other user input strategies.
1) Accelerator keys (command-x, where x is a key)
2) Speech
3) Joystick

So, in a sense the relative change in joystick position,  like the 
mouse drag is similar to your perspective.

But accelerator keys need a unit magnitude or a default mapping to a 
"drag magnitude". The default mapping should be changeable and 
scalable. So I'll use the camera's methods in Inventor for my 
modifications as suggested in this excerpt from your July 26, 2003 
email.
"If you want to have full control over the camera movement and do exact
positioning, you should not use the viewer's panning and 
dragging functions."

However, if you extend the navigation paradigm for your SC21 API you 
might want to include some sort of numerical input relative to the 
current position. Also, you might want to include some sort of 
"shoot" or "picking" function that sends the camera to the closest 
node to the screen location of the pick. Alternatively, if the user 
inputs an anthropomorphic name then the node can be identified, 
providing that a node in the scenegraph matches the input.
SC21 is a set of convenience classes. If you have a lot of time and 
nothing else to do, then the above API enhancements could enhance the 
convenience classes. Again, this can all be accomplished using the 
core OI libraries by your COIN users.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= 

